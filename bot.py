import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler,
    MessageHandler, filters, ConversationHandler, ContextTypes
)

TOKEN = os.getenv("BOT_TOKEN")

# —Ç–≤–æ–π Telegram ID (–∫—É–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑–∞—è–≤–∫–∏)
ADMIN_ID = 437753009

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ ---
ASK_NAME, ASK_PHONE, ASK_PROBLEM = range(3)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about"),
            InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ],
        [
            InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", url="https://t.me/ermakov_remont")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –†–µ–º–ü–ª—é—Å.\n–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ---
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "about":
        await query.edit_message_text(
            "üì¢ –°–µ—Ä–≤–∏—Å **–†–µ–º–ü–ª—é—Å**\n\n"
            "üîß –†–µ–º–æ–Ω—Ç —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤, –ø–ª–∞–Ω—à–µ—Ç–æ–≤ –∏ –Ω–æ—É—Ç–±—É–∫–æ–≤\n"
            "üìç –ê–¥—Ä–µ—Å: –≥. –ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª, —É–ª. –¶–∏–æ–ª–∫–æ–≤—Å–∫–æ–≥–æ, –¥.39\n"
            "‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: +7 912 041 21 21\n"
            "üïô –†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 19:00\n\n"
            "–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ ‚úÖ"
        )
    elif query.data == "help":
        await query.edit_message_text(
            "üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é\n"
            "/about ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –†–µ–º–ü–ª—é—Å\n"
            "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
            "üìû –î–ª—è —Å–≤—è–∑–∏: +7 912 041 21 21"
        )
    elif query.data == "buy":
        await query.edit_message_text("‚úçÔ∏è –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –∑–∞—è–≤–∫—É.\n–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
        return ASK_NAME

# --- –°–±–æ—Ä –∑–∞—è–≤–∫–∏ ---
async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("üì± –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return ASK_PHONE

async def ask_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("üîß –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º:")
    return ASK_PROBLEM

async def ask_problem(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["problem"] = update.message.text

    name = context.user_data["name"]
    phone = context.user_data["phone"]
    problem = context.user_data["problem"]

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    text = (
        f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
        f"üë§ –ò–º—è: {name}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üîß –ü—Ä–æ–±–ª–µ–º–∞: {problem}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=text)

    # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

    return ConversationHandler.END

# --- –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏ ---
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

# --- FAQ –æ—Ç–≤–µ—Ç—ã ---
FAQ = {
    "—ç–∫—Ä–∞–Ω": "üí° –ó–∞–º–µ–Ω–∞ —ç–∫—Ä–∞–Ω–∞ iPhone 12 ‚Äî –æ—Ç 7000‚ÇΩ, —Å—Ä–æ–∫ 1 –¥–µ–Ω—å.",
    "–±–∞—Ç–∞—Ä–µ": "üîã –ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ ‚Äî –æ—Ç 2500‚ÇΩ, —Å—Ä–æ–∫ 1 –¥–µ–Ω—å.",
    "–≤–æ–¥–∞": "üí¶ –ß–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –∂–∏–¥–∫–æ—Å—Ç–∏ ‚Äî –æ—Ç 2000‚ÇΩ.",
    "–∞–¥—Ä–µ—Å": "üìç –ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è: –ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª, —É–ª. –¶–∏–æ–ª–∫–æ–≤—Å–∫–æ–≥–æ, –¥.39",
    "—Ç–µ–ª–µ—Ñ–æ–Ω": "‚òéÔ∏è –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: +7 912 041 21 21",
    "–≤—Ä–µ–º—è": "üïô –†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 19:00"
}

async def faq_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    for key, answer in FAQ.items():
        if key in text:
            keyboard = [[InlineKeyboardButton("üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="buy")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(f"{answer}\n\n–•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?", reply_markup=reply_markup)
            return
    await update.message.reply_text("ü§î –Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ ¬´—ç–∫—Ä–∞–Ω¬ª, ¬´–±–∞—Ç–∞—Ä–µ—è¬ª, ¬´–∞–¥—Ä–µ—Å¬ª –∏–ª–∏ ¬´—Ç–µ–ª–µ—Ñ–æ–Ω¬ª.")

# --- –ó–∞–ø—É—Å–∫ ---
app = Application.builder().token(TOKEN).build()

conv_handler = ConversationHandler(
    entry_points=[CallbackQueryHandler(button_handler, pattern="^buy$")],
    states={
        ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name)],
        ASK_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_phone)],
        ASK_PROBLEM: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_problem)],
    },
    fallbacks=[CommandHandler("cancel", cancel)]
)

app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))
app.add_handler(conv_handler)
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, faq_handler))

app.run_polling()